<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BeyondSports.Core.Data.Provider.NHL</name>
    </assembly>
    <members>
        <member name="T:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiCacheDataHandler">
             <summary>
             Sets up the connection code to handle data that was cached from the ChyronHego stream API via a stream.
            
             This basically extends <see cref="T:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiDataHandler"/> with data
             backed by <see cref="T:BeyondSports.Core.Data.Provider.Streams.GenericApiCacheStream"/>.
             </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiCacheDataHandler.Id">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiCacheDataHandler.SettingKeys">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiCacheDataHandler.Initialise(BeyondSports.Core.Plugins.Settings.Interfaces.IPluginSettings)">
            <inheritdoc/>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiDataHandler">
            <summary>
            Sets up the connection code to handle Protocol Buffer data through a stream.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiDataHandler.Id">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiDataHandler.TargetFrameRate">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiDataHandler.Description">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiDataHandler.Configuration">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiDataHandler.OnTrackableFrame">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiDataHandler.OnStreamStateChanged">
            <inheritdoc/>>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiDataHandler.Stream">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiDataHandler.SettingKeys">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiDataHandler.FormatParser">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiDataHandler.UniqueMatchId">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiDataHandler.Start">
            <inheritdoc />
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiDataHandler.Authenticate">
            <inheritdoc />
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.NHL.Handlers.SMTApiDataHandler.Dispose">
            <inheritdoc />
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.NHL.Internal.API.Models.AuthenticationLoginRequest">
            <summary>
            NHL authentication object for logging into the API.
            </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.NHL.Internal.Extensions.OasisLevel2TrackingPacketExtensions">
            <summary>
            Extension methods for debugging <seealso cref="T:SMT.OASIS.Protocols.Level2Tracking.Optics3D.OASISLevel2TrackingPacket"/> from the NHL protocol.
            </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.NHL.Parsers.Exceptions.SMTParseException">
            <summary>
            Thrown when incoming NHL/SMT data could not be parsed.
            </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.NHL.Parsers.SMTParser">
            <summary>
            Parses incoming objects from and to TrackableFrames to keep NHL specific objects internally.
            </summary>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.NHL.Parsers.SMTParser.Parse(System.Byte[])">
            <inheritdoc />
            <exception cref="T:System.ArgumentNullException"><paramref name="nativeTrackableFrame"/> is <see langword="null"/></exception>
            <exception cref="T:BeyondSports.Core.Data.Provider.NHL.Parsers.Exceptions.SMTParseException">Could not parse the given native trackable frame in the SMT format.</exception>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.NHL.Parsers.SMTParser.CanParse(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.NHL.Parsers.SMTParser.ConvertToCentimeters(SMT.OASIS.Protocols.Level2Tracking.Optics3D.Vector3)">
            <summary>
            Convert from NHL vector components in feet, to centimeters for Tracab.
            </summary>
            <param name="smtVector3">SMT's Vector3.</param>
            <returns>A cloned <see cref="T:BeyondSports.Core.Math.Vector3"/>, but with its components in centimeters instead.</returns>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.NHL.Parsers.SMTParser.GetActivityTeam(SMT.OASIS.Protocols.Level2Tracking.Optics3D.Entity)">
            <summary>
            Convert from NHL enum to indicate team, to a team for Tracab.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.NHL.Streams.SMTAPIStream">
            <summary>
            Implements a stream for the NHL / SMT API live data connection.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.NHL.Streams.SMTAPIStream.AuthToken">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.NHL.Streams.SMTAPIStream.OnDataReceived">
            <inheritdoc />
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.NHL.Streams.SMTAPIStream.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.NHL.Streams.SMTAPIStream.State">
            <inheritdoc />
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.NHL.Streams.SMTAPIStream.ConnectionState">
            <inheritdoc />
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.NHL.Streams.SMTAPIStream.#ctor(BeyondSports.Core.Services.Logging.ILogService,System.Uri,System.String,System.String,System.Uri,System.String)">
            <exception cref="T:System.ArgumentNullException"><paramref name="apiStreamUri"/> is <see langword="null"/></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="authApiUri"/> is <see langword="null"/></exception>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.NHL.Streams.SMTAPIStream.Start">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.NHL.Streams.SMTAPIStream.Write(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.NHL.Streams.SMTAPIStream.Authenticate">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.NHL.Streams.SMTAPIStream.Dispose">
            <inheritdoc />
        </member>
    </members>
</doc>
