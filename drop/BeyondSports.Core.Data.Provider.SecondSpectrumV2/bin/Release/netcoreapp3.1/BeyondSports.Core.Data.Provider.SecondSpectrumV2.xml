<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BeyondSports.Core.Data.Provider.SecondSpectrumV2</name>
    </assembly>
    <members>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2ApiDataHandler">
            <summary>
            Sets up the connection code to handle JSON data through a stream.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2ApiDataHandler.Id">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2ApiDataHandler.TargetFrameRate">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2ApiDataHandler.Description">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2ApiDataHandler.Configuration">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2ApiDataHandler.OnTrackableFrame">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2ApiDataHandler.OnStreamStateChanged">
            <inheritdoc/>>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2ApiDataHandler.Stream">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2ApiDataHandler.FormatParser">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2ApiDataHandler.SettingKeys">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2ApiDataHandler.UniqueMatchId">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2ApiDataHandler.Initialise(BeyondSports.Core.Plugins.Settings.Interfaces.IPluginSettings)">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2ApiDataHandler.Start">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2ApiDataHandler.Authenticate">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2ApiDataHandler.Dispose">
            <inheritdoc />
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2CacheApiHandler">
             <summary>
             Sets up the connection code to handle data that was cached from the Second Spectrum API's via a stream.
            
             This basically extends <see cref="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2ApiDataHandler"/> with data
             backed by <see cref="T:BeyondSports.Core.Data.Provider.Streams.GenericApiCacheStream"/>.
             </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2CacheApiHandler.Id">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2CacheApiHandler.SettingKeys">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2CacheApiHandler.Initialise(BeyondSports.Core.Plugins.Settings.Interfaces.IPluginSettings)">
            <inheritdoc/>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesApiHandler">
            <summary>
            Sets up the connection code to handle the download of JSON Lines files and distribute its data through a stream.
            JSON data is coming in as JSONL, which means that the data is in lines. For more info, see https://hackernoon.com/json-lines-format-76353b4e588d.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesApiHandler.Id">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesApiHandler.Description">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesApiHandler.SettingKeys">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesApiHandler.Stream">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesApiHandler.FormatParser">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesApiHandler.UniqueMatchId">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesApiHandler.TargetFrameRate">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesApiHandler.Configuration">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesApiHandler.OnTrackableFrame">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesApiHandler.OnStreamStateChanged">
            <inheritdoc/>>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesApiHandler.Authenticate">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesApiHandler.Initialise(BeyondSports.Core.Plugins.Settings.Interfaces.IPluginSettings)">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesApiHandler.Start">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesApiHandler.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesFileHandler">
            <summary>
            Sets up the connection code to handle JSON Lines files through a stream.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesFileHandler.Id">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesFileHandler.TargetFrameRate">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesFileHandler.Description">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesFileHandler.Configuration">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesFileHandler.SettingKeys">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesFileHandler.Stream">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesFileHandler.FormatParser">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesFileHandler.UniqueMatchId">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesFileHandler.OnTrackableFrame">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesFileHandler.OnStreamStateChanged">
            <inheritdoc/>>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesFileHandler.Initialise(BeyondSports.Core.Plugins.Settings.Interfaces.IPluginSettings)">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesFileHandler.Authenticate">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesFileHandler.Start">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2JsonLinesFileHandler.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2PoseFilesHandler.Id">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2PoseFilesHandler.TargetFrameRate">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2PoseFilesHandler.Description">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2PoseFilesHandler.Configuration">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2PoseFilesHandler.SettingKeys">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2PoseFilesHandler.Stream">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2PoseFilesHandler.FormatParser">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2PoseFilesHandler.UniqueMatchId">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2PoseFilesHandler.OnTrackableFrame">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2PoseFilesHandler.OnStreamStateChanged">
            <inheritdoc/>>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2PoseFilesHandler.Initialise(BeyondSports.Core.Plugins.Settings.Interfaces.IPluginSettings)">
            <inheritdoc />
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2PoseFilesHandler.Authenticate">
            <inheritdoc />
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2PoseFilesHandler.Start">
            <inheritdoc />
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Handlers.SecondSpectrumV2PoseFilesHandler.Dispose">
            <inheritdoc />
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.ConnectionOptions">
            <summary>
            Connection parameters to establish a websocket
            connection to Second Spectrum's v2 API
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.ConnectionOptions.League">
            <summary>
            League of the feed to connect to.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.ConnectionOptions.FeedName">
            <summary>
            Name of the feed to connect to. Valid values:
            <para><c>tracking-fast</c> for raw tracking at max 30s past live.</para>
            <para><c>tracking-fast-refs</c> the same as above but with referees.</para>
            <para><c>tracking-produced</c> for produced tracking at 10 minutes past live.</para>
            <para><c>tracking-refs-produced</c> the same as above but with referees.</para>
            <para><c>insight</c> for combined event and tracking feed at max 1 min past live.</para>
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.ConnectionOptions.GameId">
            <summary>
            Opta Legacy ID (such as 2128553) or SSI game ID.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.ConnectionOptions.GameIdType">
            <summary>
            <c>opta</c> or <c>ssi</c> depending on which
            id type is used in <see cref="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.ConnectionOptions.GameId"/>.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.ConnectionOptions.TestFeed">
            <summary>
            Connects to the test feed if <see langword="true" />.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.ConnectionOptions.Position">
            <summary>
            Specifies where in the stream to start ingesting data from:
            <para><c>start</c> to start from the beginning of the stream.</para>
            <para><c>live</c> to start from the edge of the stream.</para>
            <para><c>instanceId:sequenceNumber</c> to start from the given <c>sequenceNumber</c>.</para>
            </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedBall">
            <summary>
            Second Spectrum Websocket feed API model for ball entity.
            </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedEntity">
            <summary>
            Second Spectrum Websocket base feed API model for all entities.
            e.g. <see cref="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedBall"/>, <see cref="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedPlayer"/>.
            </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedFrame">
            <summary>
            Second Spectrum Websocket feed API model for frame info.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedFrame.MessageType">
            <summary>
            Currently only used to specify if it's a <c>periodEnd</c> signal.
            It is not present otherwise.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedFrame.MessageParameters">
            <summary>
            Additional details for the specified <see cref="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedFrame.MessageType"/>.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedFrame.Ball">
            <summary>
            Can be null because Second Spectrum does not always
            detect the ball (e.g. when it's out of the fields' bounds).
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedFrame.Live">
            <summary>
            Can be missing because <see cref="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedFrame.Live"/> is not
            available for 'tracking-cleaned' data.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedFrame.LastTouchedByTeam">
            <summary>
            Can be missing because <see cref="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedFrame.LastTouchedByTeam"/>
            is not available for 'tracking-cleaned' data.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedFrame.Parameters.PeriodNumber">
            <summary>
            1 for the first half, 2 for the second half,
            3 and 4 for extra time halves, and 5 for penalties.
            </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedMessage">
            <summary>
            Second Spectrum Websocket feed API model for live feed message.
            </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedPlayer">
            <summary>
            Second Spectrum Websocket feed API model for players.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedPlayer.Id">
            <summary>
            Opta Legacy ID until before the start of EPL's 2021/2022 season.
            Second Spectrum's own ID starting with EPL's 2021/2022 season.
            </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedReferee">
            <summary>
            Second Spectrum Websocket feed API model for referees.
            </summary>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.REST.Extensions.RestGameExtensions.GetAllPersonInfos(BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.REST.RestGame)">
            <summary>
            Gets <seealso cref="T:BeyondSports.Core.Entities.Info.PersonInfo"/> of all players.
            </summary>
            <returns><seealso cref="T:BeyondSports.Core.Entities.Info.PersonInfo"/> of all players.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="metaModel"/> is <see langword="null"/></exception>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.REST.RestGame">
             <summary>
             Second Spectrum REST API model for static game info.
             
             The following fields were removed and should not be re-introduced to
             this model, even after SecSpec introduces them. They're randomly
             removed by them.
            
             - optaUuid
             - homeSsId
             - awaySsiId
             - homeOptaUuid
             - awayOptaUuid
            
             By not adding these properties as Required.Default, we cannot make
             the mistake of using them in our software while they're not being
             sent (and therefore could be null).
             </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.REST.RestModel">
            <summary>
            Second Spectrum REST API model for API request data.
            </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.REST.RestPlayer">
             <summary>
             Second Spectrum REST API model for static player info.
            
             The following fields were removed and should not be re-introduced to
             this model, even after SecSpec introduces them. They're randomly
             removed by them.
            
             - optaUuid
            
             By not adding these properties as Required.Default, we cannot make
             the mistake of using them in our software while they're not being
             sent (and therefore could be null).
             </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.REST.RestResponseError">
            <summary>
            Second Spectrum REST API response error model.
            </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Contexts.Entity.SecondSpectrumPoseDataContext">
            <summary>
            Internal Context to store all SecondSpectrum specific pose data.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Contexts.Entity.SecondSpectrumPoseDataContext.OffsetApplied">
            <summary>
            True if an offset has been applied to <see cref="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Contexts.Entity.SecondSpectrumPoseDataContext.KeyPointsXyzs"/>.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Contexts.Entity.SecondSpectrumPoseDataContext.ChunkIndex">
            <summary>
            Index of the chunk containing this pose.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Contexts.Entity.SecondSpectrumPoseDataContext.DetectionIds">
            <summary>
            Available detection ids.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Contexts.Entity.SecondSpectrumPoseDataContext.FrameIndex">
            <summary>
            Indicates the index of the frame within a chunk.
            Where the chunk's index is <see cref="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Contexts.Entity.SecondSpectrumPoseDataContext.ChunkIndex"/>.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Contexts.Entity.SecondSpectrumPoseDataContext.HeadFound">
            <summary>
            True if head is found.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Contexts.Entity.SecondSpectrumPoseDataContext.HeadPosition">
            <summary>
            Position of the head of the <see cref="T:BeyondSports.Core.Entities.Person"/>, given in meters.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Contexts.Entity.SecondSpectrumPoseDataContext.IsInterpolated">
            <summary>
            Determines if the pose data has been interpolated.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Contexts.Entity.SecondSpectrumPoseDataContext.Score">
            <summary>
            Current score.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Contexts.Entity.SecondSpectrumPoseDataContext.TrackId">
            <summary>
            Tracking Id of the <see cref="T:BeyondSports.Core.Entities.Person"/>.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Contexts.Entity.SecondSpectrumPoseDataContext.KeyPointsXyzs">
            <summary>
            Only to be used internally.
            If you want to get joint positions, please use <exception cref="T:BeyondSports.Core.Entities.Contexts.PersonPoseContext"> instead.</exception>
            </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Enums.SecondSpectrumPoseJoint">
            <summary>
            Internal mapping for the joint coordinate grouping of Second Spectrum Pose Data.
            The order of this enum should NOT be altered, unless Second Spectrum has updated their spec.
            </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Helpers.RestApiClient">
            <summary>
            Client to handle calls to Second Spectrum's REST API to retrieve
            static match information.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Helpers.RestApiClient.AuthToken">
            <summary>
            Authentication token for Second Spectrum's REST API. Same as for
            the websocket feed.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Helpers.RestApiClient.GameId">
            <summary>
            Game ID. Same as the Opta ID.
            </summary>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Helpers.RestApiClient.#ctor(System.String,System.String)">
            <summary>
            Initialises an instance of <see cref="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Helpers.RestApiClient"/>.
            </summary>
            <param name="authToken">Authentication for Second Spectrum's REST API. See <seealso cref="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Helpers.RestApiClient.AuthToken"/>.</param>
            <param name="gameId">Game ID to use. See <seealso cref="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Helpers.RestApiClient.GameId"/>.</param>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Helpers.RestApiClient.GetMetaData">
            <summary>
            Retrieves static player information.
            </summary>
            <returns>Player information in a <see cref="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.REST.RestModel"/>.</returns>
            <exception cref="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Exceptions.RestApiClientException">Could not obtain meta data.</exception>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Helpers.RestApiClient.GetTrackingProducedJson(System.String,System.String)">
            <summary>
            Gets produced post-match Json lines file
            </summary>
            <param name="outputPath">When given will overwrite the default temp path.</param>
            <param name="fileName">When given, will overwrite the default temp file name.</param>
            <returns>Full (temp) path to the Json file.</returns>
            <exception cref="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Exceptions.RestApiClientException">Could not obtain tracking produced jsonl.</exception>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Helpers.RestApiClient.GetContentFromResponse(RestSharp.RestRequest)">
            <exception cref="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Exceptions.RestApiClientException">Could not obtain valid response.</exception>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Metadata.SecondSpectrumV2CacheMetadataRepository">
            <summary>
            Sets up a repository with metadata based on Second Spectrum v2 cached metadata.
            </summary>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Metadata.SecondSpectrumV2CacheMetadataRepository.#ctor(System.String)">
            <summary>
            Sets up a repository with metadata based on Second Spectrum v2 cached metadata.
            </summary>
            <param name="cacheFilePath">Path of the second spectrum cache file which is used to look up
            the metadata cache file as they are paired and stored together.</param>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Metadata.SecondSpectrumV2CacheMetadataRepository.GetPersonMetadata(System.String)">
            <inheritdoc/>
            <exception cref="T:BeyondSports.Core.Entities.Exceptions.MetadataRepositoryException">Could not obtain metadata for person with given <paramref name="personId"/>.</exception>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Metadata.SecondSpectrumV2CacheMetadataRepository.GetPitchMetadata">
            <inheritdoc />
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Metadata.SecondSpectrumV2CacheMetadataRepository.Initialise">
            <exception cref="T:BeyondSports.Core.Entities.Exceptions.MetadataRepositoryException">Could not initialise metadata repository.</exception>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Metadata.SecondSpectrumV2MetadataRepository">
            <summary>
            Sets up a repository with metadata based on Second Spectrum v2's REST API metadata.
            </summary>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Metadata.SecondSpectrumV2MetadataRepository.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Sets up a repository with metadata based on Second Spectrum v2's REST API metadata.
            </summary>
            <param name="authToken">Authentication for Second Spectrum's REST API.</param>
            <param name="gameId">Game ID for Second Spectrum's REST API.</param>
            <param name="metadataOutputFileName">Name of the metadata file.</param>
            <param name="metadataOutputPath">Path to where the metadata file should be stored.</param>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Metadata.SecondSpectrumV2MetadataRepository.GetPersonMetadata(System.String)">
            <inheritdoc/>
            <exception cref="T:BeyondSports.Core.Entities.Exceptions.MetadataRepositoryException">Could not obtain metadata for person with given <paramref name="personId"/>.</exception>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Metadata.SecondSpectrumV2MetadataRepository.GetPitchMetadata">
            <inheritdoc />
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Metadata.SecondSpectrumV2MetadataRepository.Initialise">
            <exception cref="T:BeyondSports.Core.Entities.Exceptions.MetadataRepositoryException">Could not initialise metadata repository.</exception>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Metadata.SecondSpectrumV2PersonMappingConfiguration">
            <summary>
            Provides the mapping configuration from <see cref="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.REST.RestPlayer"/> to <see cref="T:BeyondSports.Core.Entities.Info.PersonInfo"/>
            </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Parsers.Exceptions.SecondSpectrumV2ParseException">
            <summary>
            Thrown when incoming Second Spectrum V2 data could not be parsed.
            </summary>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Parsers.Exceptions.SecondSpectrumV2UnparseException">
            <summary>
            Thrown when <see cref="T:BeyondSports.Core.Frames.Interfaces.ITrackableFrame"/> could not be unparsed to a Second Spectrum V2 supported format.
            </summary>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Parsers.Mapping.PoseFrameExtensions.ToTrackableFrame(BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Models.PoseFrame,BeyondSports.Core.Utils.Interfaces.IPersonCreator)">
            <exception cref="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Parsers.Exceptions.SecondSpectrumV2ParseException">Could not map from <see cref="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Models.PoseFrame"/> to <see cref="T:BeyondSports.Core.Frames.Interfaces.ITrackableFrame"/>.</exception>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Parsers.SecondSpectrumV2Parser">
            <summary>
            This parser implements support for parsing of
            Second Spectrum V2's <see cref="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.API.Feed.FeedFrame"/> frame objects.
            
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Parsers.SecondSpectrumV2Parser.Parse(System.Byte[])">
            <inheritdoc />
            <exception cref="T:System.ArgumentNullException"><paramref name="nativeTrackableFrame"/> is <see langword="null"/></exception>
            <exception cref="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Parsers.Exceptions.SecondSpectrumV2ParseException">Could not parse the given native trackable frame in the Second Spectrum V2 format.</exception>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Parsers.SecondSpectrumV2Parser.CanParse(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Parsers.SecondSpectrumV2PoseParser">
            <summary>
            Parser for the temporary pose data format where each
            frame is a <see cref="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Models.PoseFrame"/> in JSON format.
            </summary>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Parsers.SecondSpectrumV2PoseParser.Parse(System.Byte[])">
            <inheritdoc />
            <exception cref="T:System.ArgumentNullException"><paramref name="nativeTrackableFrame"/> is <see langword="null"/></exception>
            <exception cref="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Parsers.Exceptions.SecondSpectrumV2ParseException">Could not parse the given native trackable frame in the Second Spectrum V2 Temp Pose format.</exception>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Parsers.SecondSpectrumV2PoseParser.CanParse(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2ApiStream">
            <summary>
            Implements a stream for the Second Spectrum API live data connection.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2ApiStream.AuthToken">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2ApiStream.OnDataReceived">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2ApiStream.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2ApiStream.State">
            <inheritdoc />
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2ApiStream.ConnectionState">
            <inheritdoc />
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2ApiStream.Start">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2ApiStream.Write(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2ApiStream.Authenticate">
            <inheritdoc/>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesApiStream">
            <summary>
            Implements a stream for the Second Spectrum API produced JSON Lines data connection.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesApiStream.AuthToken">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesApiStream.OnDataReceived">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesApiStream.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesApiStream.State">
            <inheritdoc />
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesApiStream.ConnectionState">
            <inheritdoc />
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesApiStream.Authenticate">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesApiStream.Write(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesApiStream.Start">
            <inheritdoc/>
            <exception cref="T:BeyondSports.Core.Data.Provider.Streams.Exceptions.DataStreamException">Data stream could not be started.</exception>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesApiStream.GetJsonData(System.String,System.String)">
            <exception cref="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Internal.Exceptions.RestApiClientException">Could not obtain tracking produced jsonl.</exception>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesApiStream.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesFileStream">
            <summary>
            Implements a stream for the Second Spectrum JSON Lines file data.
            </summary>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesFileStream.AuthToken">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesFileStream.OnDataReceived">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesFileStream.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesFileStream.State">
            <inheritdoc />
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesFileStream.ConnectionState">
            <inheritdoc />
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesFileStream.Authenticate">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesFileStream.Write(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesFileStream.Start">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2JsonLinesFileStream.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2PoseFilesStream.AuthToken">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2PoseFilesStream.OnDataReceived">
            <inheritdoc/>
        </member>
        <member name="E:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2PoseFilesStream.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2PoseFilesStream.State">
            <inheritdoc />
        </member>
        <member name="P:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2PoseFilesStream.ConnectionState">
            <inheritdoc />
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2PoseFilesStream.Authenticate">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2PoseFilesStream.Write(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2PoseFilesStream.Start">
            <inheritdoc/>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Streams.SecondSpectrumV2PoseFilesStream.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Utils.SecondSpectrumV2ParserUtils">
            <summary>
            Utility methods for tasks related to parsing of Second Spectrum trackable data.
            </summary>
        </member>
        <member name="M:BeyondSports.Core.Data.Provider.SecondSpectrumV2.Utils.SecondSpectrumV2ParserUtils.SelectParser(BeyondSports.Core.Utils.Interfaces.IPersonCreator,BeyondSports.Core.Entities.Interfaces.IMetadataRepository,System.Boolean)">
            <summary>
            Selects which Second Spectrum parser implementation to use based on the
            <c>pose-data</c> plugin setting option.
            </summary>
            <param name="personCreator">An instance of <see cref="T:BeyondSports.Core.Utils.Interfaces.IPersonCreator"/> for enriching entity data.</param>
            <param name="metaDataRepository">Holds metadata which can be used to enrich the tracking data.</param>
            <param name="isPoseData">Determines which parser to use.</param>
            <returns>Chosen Second Spectrum parser implementation.</returns>
        </member>
    </members>
</doc>
